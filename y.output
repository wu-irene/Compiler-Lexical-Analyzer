Terminals unused in grammar

   FUNCTION
   ARRAY
   OF
   THEN
   ENDIF
   DO
   CONTINUE
   BREAK
   READ
   NOT
   TRUE
   FALSE
   MOD
   COLON
   L_SQUARE_BRACKET
   R_SQUARE_BRACKET
   EQUAL
   OUTPUT


State 10 conflicts: 8 shift/reduce, 15 reduce/reduce
State 11 conflicts: 8 shift/reduce, 15 reduce/reduce
State 17 conflicts: 8 shift/reduce, 16 reduce/reduce
State 24 conflicts: 13 shift/reduce, 16 reduce/reduce
State 36 conflicts: 8 shift/reduce, 14 reduce/reduce
State 43 conflicts: 8 shift/reduce, 15 reduce/reduce
State 44 conflicts: 8 shift/reduce, 16 reduce/reduce
State 46 conflicts: 8 shift/reduce, 15 reduce/reduce
State 47 conflicts: 8 shift/reduce, 16 reduce/reduce
State 48 conflicts: 8 shift/reduce, 16 reduce/reduce
State 49 conflicts: 8 shift/reduce, 16 reduce/reduce
State 50 conflicts: 8 shift/reduce, 16 reduce/reduce
State 52 conflicts: 8 shift/reduce, 16 reduce/reduce
State 53 conflicts: 8 shift/reduce, 16 reduce/reduce
State 54 conflicts: 8 shift/reduce, 16 reduce/reduce
State 55 conflicts: 8 shift/reduce, 16 reduce/reduce
State 71 conflicts: 4 shift/reduce
State 72 conflicts: 8 shift/reduce, 14 reduce/reduce
State 74 conflicts: 4 shift/reduce
State 75 conflicts: 4 shift/reduce
State 76 conflicts: 4 shift/reduce
State 77 conflicts: 4 shift/reduce
State 78 conflicts: 4 shift/reduce
State 79 conflicts: 4 shift/reduce
State 80 conflicts: 4 shift/reduce
State 81 conflicts: 4 shift/reduce
State 82 conflicts: 4 shift/reduce
State 83 conflicts: 4 shift/reduce
State 84 conflicts: 4 shift/reduce
State 85 conflicts: 4 shift/reduce
State 86 conflicts: 8 shift/reduce, 14 reduce/reduce
State 113 conflicts: 8 shift/reduce, 14 reduce/reduce
State 114 conflicts: 8 shift/reduce, 14 reduce/reduce
State 119 conflicts: 2 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | functions

    3 functions: function
    4          | function functions

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY
    6         | VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    7 arguments: argument
    8          | argument COMMA arguments

    9 argument: %empty
   10         | INTEGER IDENT
   11         | IDENT
   12         | statements

   13 variable: IDENT
   14         | NUMBER

   15 statements: %empty
   16           | statement SEMICOLON
   17           | statement statements

   18 statement: %empty
   19          | ifElseState
   20          | whileLoop
   21          | assignment
   22          | definition
   23          | return
   24          | functionCall
   25          | math
   26          | write

   27 write: WRITE INPUT variable SEMICOLON

   28 math: variable MINUS variable
   29     | variable PLUS variable
   30     | variable MULT variable
   31     | variable DIV variable
   32     | variable MULT statement
   33     | variable PLUS statement
   34     | variable MINUS statement
   35     | variable DIV statement
   36     | statement MULT statement
   37     | statement DIV statement
   38     | statement PLUS statement
   39     | statement MINUS statement

   40 functionCall: IDENT L_PAREN arguments R_PAREN

   41 return: RETURN NUMBER SEMICOLON
   42       | RETURN IDENT SEMICOLON
   43       | RETURN statements

   44 definition: INTEGER IDENT SEMICOLON

   45 ifElseState: %empty
   46            | IF L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY ifElseState
   47            | ELSE BEGIN_BODY statements END_BODY

   48 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY

   49 assignment: IDENT ASSIGN variable SEMICOLON
   50           | IDENT ASSIGN statement

   51 condition: %empty
   52          | IDENT EQ IDENT
   53          | IDENT NEQ IDENT
   54          | IDENT LT IDENT
   55          | IDENT GT IDENT
   56          | IDENT LTE IDENT
   57          | IDENT GTE IDENT
   58          | IDENT EQ NUMBER
   59          | IDENT NEQ NUMBER
   60          | IDENT LT NUMBER
   61          | IDENT GT NUMBER
   62          | IDENT LTE NUMBER
   63          | IDENT GTE NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 5 10 44
FUNCTION (259)
BEGIN_BODY (260) 5 6 46 47 48
END_BODY (261) 5 6 46 47 48
ARRAY (262)
OF (263)
IF (264) 46
THEN (265)
ENDIF (266)
ELSE (267) 47
WHILE (268) 48
DO (269)
CONTINUE (270)
BREAK (271)
READ (272)
WRITE (273) 27
NOT (274)
TRUE (275)
FALSE (276)
RETURN (277) 41 42 43
MOD (278)
EQ (279) 52 58
NEQ (280) 53 59
LT (281) 54 60
GT (282) 55 61
LTE (283) 56 62
GTE (284) 57 63
SEMICOLON (285) 16 27 41 42 44 49
COLON (286)
COMMA (287) 8
L_SQUARE_BRACKET (288)
R_SQUARE_BRACKET (289)
EQUAL (290)
NUMBER (291) 14 41 58 59 60 61 62 63
PLUS (292) 29 33 38
MINUS (293) 28 34 39
MULT (294) 30 32 36
DIV (295) 31 35 37
L_PAREN (296) 5 6 40 46 48
R_PAREN (297) 5 6 40 46 48
ASSIGN (298) 49 50
INPUT (299) 27
OUTPUT (300)
IDENT (301) 5 6 10 11 13 40 42 44 49 50 52 53 54 55 56 57 58 59 60
    61 62 63
VOID (302) 6


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
prog_start (49)
    on left: 1 2, on right: 0
functions (50)
    on left: 3 4, on right: 2 4
function (51)
    on left: 5 6, on right: 3 4
arguments (52)
    on left: 7 8, on right: 5 6 8 40
argument (53)
    on left: 9 10 11 12, on right: 7 8
variable (54)
    on left: 13 14, on right: 27 28 29 30 31 32 33 34 35 49
statements (55)
    on left: 15 16 17, on right: 5 6 12 17 43 46 47 48
statement (56)
    on left: 18 19 20 21 22 23 24 25 26, on right: 16 17 32 33 34 35
    36 37 38 39 50
write (57)
    on left: 27, on right: 26
math (58)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39, on right: 25
functionCall (59)
    on left: 40, on right: 24
return (60)
    on left: 41 42 43, on right: 23
definition (61)
    on left: 44, on right: 22
ifElseState (62)
    on left: 45 46 47, on right: 19 46
whileLoop (63)
    on left: 48, on right: 20
assignment (64)
    on left: 49 50, on right: 21
condition (65)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63, on right: 46 48


State 0

    0 $accept: . prog_start $end

    INTEGER  shift, and go to state 1
    VOID     shift, and go to state 2

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 3
    functions   go to state 4
    function    go to state 5


State 1

    5 function: INTEGER . IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    6 function: VOID . IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 7


State 3

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 4

    2 prog_start: functions .

    $default  reduce using rule 2 (prog_start)


State 5

    3 functions: function .
    4          | function . functions

    INTEGER  shift, and go to state 1
    VOID     shift, and go to state 2

    $default  reduce using rule 3 (functions)

    functions  go to state 9
    function   go to state 5


State 6

    5 function: INTEGER IDENT . L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    L_PAREN  shift, and go to state 10


State 7

    6 function: VOID IDENT . L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    L_PAREN  shift, and go to state 11


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 10

    5 function: INTEGER IDENT L_PAREN . arguments R_PAREN BEGIN_BODY statements END_BODY

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 19

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 20
    argument      go to state 21
    variable      go to state 22
    statements    go to state 23
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 11

    6 function: VOID IDENT L_PAREN . arguments R_PAREN BEGIN_BODY statements END_BODY

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 19

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 33
    argument      go to state 21
    variable      go to state 22
    statements    go to state 23
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 12

   10 argument: INTEGER . IDENT
   44 definition: INTEGER . IDENT SEMICOLON

    IDENT  shift, and go to state 34


State 13

   46 ifElseState: IF . L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY ifElseState

    L_PAREN  shift, and go to state 35


State 14

   47 ifElseState: ELSE . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 36


State 15

   48 whileLoop: WHILE . L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY

    L_PAREN  shift, and go to state 37


State 16

   27 write: WRITE . INPUT variable SEMICOLON

    INPUT  shift, and go to state 38


State 17

   41 return: RETURN . NUMBER SEMICOLON
   42       | RETURN . IDENT SEMICOLON
   43       | RETURN . statements

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 41

    INTEGER    [reduce using rule 15 (statements)]
    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 15 (statements)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 15 (statements)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 15 (statements)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 15 (statements)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 15 (statements)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 15 (statements)
    SEMICOLON  [reduce using rule 18 (statement)]
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 15 (statements)
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 15 (statements)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 15 (statements)
    PLUS       [reduce using rule 18 (statement)]
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 15 (statements)
    MINUS      [reduce using rule 18 (statement)]
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 15 (statements)
    MULT       [reduce using rule 18 (statement)]
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 15 (statements)
    DIV        [reduce using rule 18 (statement)]
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 15 (statements)
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 15 (statements)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 15 (statements)

    variable      go to state 22
    statements    go to state 42
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 18

   14 variable: NUMBER .

    $default  reduce using rule 14 (variable)


State 19

   11 argument: IDENT .
   13 variable: IDENT .
   40 functionCall: IDENT . L_PAREN arguments R_PAREN
   49 assignment: IDENT . ASSIGN variable SEMICOLON
   50           | IDENT . ASSIGN statement

    L_PAREN  shift, and go to state 43
    ASSIGN   shift, and go to state 44

    COMMA     reduce using rule 11 (argument)
    R_PAREN   reduce using rule 11 (argument)
    $default  reduce using rule 13 (variable)


State 20

    5 function: INTEGER IDENT L_PAREN arguments . R_PAREN BEGIN_BODY statements END_BODY

    R_PAREN  shift, and go to state 45


State 21

    7 arguments: argument .
    8          | argument . COMMA arguments

    COMMA  shift, and go to state 46

    $default  reduce using rule 7 (arguments)


State 22

   28 math: variable . MINUS variable
   29     | variable . PLUS variable
   30     | variable . MULT variable
   31     | variable . DIV variable
   32     | variable . MULT statement
   33     | variable . PLUS statement
   34     | variable . MINUS statement
   35     | variable . DIV statement

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MULT   shift, and go to state 49
    DIV    shift, and go to state 50


State 23

   12 argument: statements .

    $default  reduce using rule 12 (argument)


State 24

   16 statements: statement . SEMICOLON
   17           | statement . statements
   36 math: statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement

    INTEGER    shift, and go to state 39
    IF         shift, and go to state 13
    ELSE       shift, and go to state 14
    WHILE      shift, and go to state 15
    WRITE      shift, and go to state 16
    RETURN     shift, and go to state 17
    SEMICOLON  shift, and go to state 51
    NUMBER     shift, and go to state 18
    PLUS       shift, and go to state 52
    MINUS      shift, and go to state 53
    MULT       shift, and go to state 54
    DIV        shift, and go to state 55
    IDENT      shift, and go to state 56

    INTEGER    [reduce using rule 15 (statements)]
    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 15 (statements)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 15 (statements)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 15 (statements)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 15 (statements)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 15 (statements)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  [reduce using rule 15 (statements)]
    SEMICOLON  [reduce using rule 18 (statement)]
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 15 (statements)
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 15 (statements)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       [reduce using rule 15 (statements)]
    PLUS       [reduce using rule 18 (statement)]
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      [reduce using rule 15 (statements)]
    MINUS      [reduce using rule 18 (statement)]
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       [reduce using rule 15 (statements)]
    MULT       [reduce using rule 18 (statement)]
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        [reduce using rule 15 (statements)]
    DIV        [reduce using rule 18 (statement)]
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 15 (statements)
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 15 (statements)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 15 (statements)

    variable      go to state 22
    statements    go to state 57
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 25

   26 statement: write .

    $default  reduce using rule 26 (statement)


State 26

   25 statement: math .

    $default  reduce using rule 25 (statement)


State 27

   24 statement: functionCall .

    $default  reduce using rule 24 (statement)


State 28

   23 statement: return .

    $default  reduce using rule 23 (statement)


State 29

   22 statement: definition .

    $default  reduce using rule 22 (statement)


State 30

   19 statement: ifElseState .

    $default  reduce using rule 19 (statement)


State 31

   20 statement: whileLoop .

    $default  reduce using rule 20 (statement)


State 32

   21 statement: assignment .

    $default  reduce using rule 21 (statement)


State 33

    6 function: VOID IDENT L_PAREN arguments . R_PAREN BEGIN_BODY statements END_BODY

    R_PAREN  shift, and go to state 58


State 34

   10 argument: INTEGER IDENT .
   44 definition: INTEGER IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 59

    $default  reduce using rule 10 (argument)


State 35

   46 ifElseState: IF L_PAREN . condition R_PAREN BEGIN_BODY statements END_BODY ifElseState

    IDENT  shift, and go to state 60

    $default  reduce using rule 51 (condition)

    condition  go to state 61


State 36

   47 ifElseState: ELSE BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statements    go to state 62
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 37

   48 whileLoop: WHILE L_PAREN . condition R_PAREN BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 60

    $default  reduce using rule 51 (condition)

    condition  go to state 63


State 38

   27 write: WRITE INPUT . variable SEMICOLON

    NUMBER  shift, and go to state 18
    IDENT   shift, and go to state 64

    variable  go to state 65


State 39

   44 definition: INTEGER . IDENT SEMICOLON

    IDENT  shift, and go to state 66


State 40

   14 variable: NUMBER .
   41 return: RETURN NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 67

    $default  reduce using rule 14 (variable)


State 41

   13 variable: IDENT .
   40 functionCall: IDENT . L_PAREN arguments R_PAREN
   42 return: RETURN IDENT . SEMICOLON
   49 assignment: IDENT . ASSIGN variable SEMICOLON
   50           | IDENT . ASSIGN statement

    SEMICOLON  shift, and go to state 68
    L_PAREN    shift, and go to state 43
    ASSIGN     shift, and go to state 44

    $default  reduce using rule 13 (variable)


State 42

   43 return: RETURN statements .

    $default  reduce using rule 43 (return)


State 43

   40 functionCall: IDENT L_PAREN . arguments R_PAREN

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 19

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 69
    argument      go to state 21
    variable      go to state 22
    statements    go to state 23
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 44

   49 assignment: IDENT ASSIGN . variable SEMICOLON
   50           | IDENT ASSIGN . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 70
    statement     go to state 71
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 45

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 72


State 46

    8 arguments: argument COMMA . arguments

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 19

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 73
    argument      go to state 21
    variable      go to state 22
    statements    go to state 23
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 47

   29 math: variable PLUS . variable
   33     | variable PLUS . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 74
    statement     go to state 75
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 48

   28 math: variable MINUS . variable
   34     | variable MINUS . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 76
    statement     go to state 77
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 49

   30 math: variable MULT . variable
   32     | variable MULT . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 78
    statement     go to state 79
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 50

   31 math: variable DIV . variable
   35     | variable DIV . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 80
    statement     go to state 81
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 51

   16 statements: statement SEMICOLON .

    $default  reduce using rule 16 (statements)


State 52

   38 math: statement PLUS . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statement     go to state 82
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 53

   39 math: statement MINUS . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statement     go to state 83
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 54

   36 math: statement MULT . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statement     go to state 84
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 55

   37 math: statement DIV . statement

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statement     go to state 85
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 56

   13 variable: IDENT .
   40 functionCall: IDENT . L_PAREN arguments R_PAREN
   49 assignment: IDENT . ASSIGN variable SEMICOLON
   50           | IDENT . ASSIGN statement

    L_PAREN  shift, and go to state 43
    ASSIGN   shift, and go to state 44

    $default  reduce using rule 13 (variable)


State 57

   17 statements: statement statements .

    $default  reduce using rule 17 (statements)


State 58

    6 function: VOID IDENT L_PAREN arguments R_PAREN . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 86


State 59

   44 definition: INTEGER IDENT SEMICOLON .

    $default  reduce using rule 44 (definition)


State 60

   52 condition: IDENT . EQ IDENT
   53          | IDENT . NEQ IDENT
   54          | IDENT . LT IDENT
   55          | IDENT . GT IDENT
   56          | IDENT . LTE IDENT
   57          | IDENT . GTE IDENT
   58          | IDENT . EQ NUMBER
   59          | IDENT . NEQ NUMBER
   60          | IDENT . LT NUMBER
   61          | IDENT . GT NUMBER
   62          | IDENT . LTE NUMBER
   63          | IDENT . GTE NUMBER

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92


State 61

   46 ifElseState: IF L_PAREN condition . R_PAREN BEGIN_BODY statements END_BODY ifElseState

    R_PAREN  shift, and go to state 93


State 62

   47 ifElseState: ELSE BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 94


State 63

   48 whileLoop: WHILE L_PAREN condition . R_PAREN BEGIN_BODY statements END_BODY

    R_PAREN  shift, and go to state 95


State 64

   13 variable: IDENT .

    $default  reduce using rule 13 (variable)


State 65

   27 write: WRITE INPUT variable . SEMICOLON

    SEMICOLON  shift, and go to state 96


State 66

   44 definition: INTEGER IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 67

   41 return: RETURN NUMBER SEMICOLON .

    $default  reduce using rule 41 (return)


State 68

   42 return: RETURN IDENT SEMICOLON .

    $default  reduce using rule 42 (return)


State 69

   40 functionCall: IDENT L_PAREN arguments . R_PAREN

    R_PAREN  shift, and go to state 97


State 70

   28 math: variable . MINUS variable
   29     | variable . PLUS variable
   30     | variable . MULT variable
   31     | variable . DIV variable
   32     | variable . MULT statement
   33     | variable . PLUS statement
   34     | variable . MINUS statement
   35     | variable . DIV statement
   49 assignment: IDENT ASSIGN variable . SEMICOLON

    SEMICOLON  shift, and go to state 98
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    MULT       shift, and go to state 49
    DIV        shift, and go to state 50


State 71

   36 math: statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement
   50 assignment: IDENT ASSIGN statement .

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 50 (assignment)]
    MINUS     [reduce using rule 50 (assignment)]
    MULT      [reduce using rule 50 (assignment)]
    DIV       [reduce using rule 50 (assignment)]
    $default  reduce using rule 50 (assignment)


State 72

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statements    go to state 99
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 73

    8 arguments: argument COMMA arguments .

    $default  reduce using rule 8 (arguments)


State 74

   28 math: variable . MINUS variable
   29     | variable . PLUS variable
   29     | variable PLUS variable .
   30     | variable . MULT variable
   31     | variable . DIV variable
   32     | variable . MULT statement
   33     | variable . PLUS statement
   34     | variable . MINUS statement
   35     | variable . DIV statement

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MULT   shift, and go to state 49
    DIV    shift, and go to state 50

    PLUS      [reduce using rule 29 (math)]
    MINUS     [reduce using rule 29 (math)]
    MULT      [reduce using rule 29 (math)]
    DIV       [reduce using rule 29 (math)]
    $default  reduce using rule 29 (math)


State 75

   33 math: variable PLUS statement .
   36     | statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 33 (math)]
    MINUS     [reduce using rule 33 (math)]
    MULT      [reduce using rule 33 (math)]
    DIV       [reduce using rule 33 (math)]
    $default  reduce using rule 33 (math)


State 76

   28 math: variable . MINUS variable
   28     | variable MINUS variable .
   29     | variable . PLUS variable
   30     | variable . MULT variable
   31     | variable . DIV variable
   32     | variable . MULT statement
   33     | variable . PLUS statement
   34     | variable . MINUS statement
   35     | variable . DIV statement

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MULT   shift, and go to state 49
    DIV    shift, and go to state 50

    PLUS      [reduce using rule 28 (math)]
    MINUS     [reduce using rule 28 (math)]
    MULT      [reduce using rule 28 (math)]
    DIV       [reduce using rule 28 (math)]
    $default  reduce using rule 28 (math)


State 77

   34 math: variable MINUS statement .
   36     | statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 34 (math)]
    MINUS     [reduce using rule 34 (math)]
    MULT      [reduce using rule 34 (math)]
    DIV       [reduce using rule 34 (math)]
    $default  reduce using rule 34 (math)


State 78

   28 math: variable . MINUS variable
   29     | variable . PLUS variable
   30     | variable . MULT variable
   30     | variable MULT variable .
   31     | variable . DIV variable
   32     | variable . MULT statement
   33     | variable . PLUS statement
   34     | variable . MINUS statement
   35     | variable . DIV statement

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MULT   shift, and go to state 49
    DIV    shift, and go to state 50

    PLUS      [reduce using rule 30 (math)]
    MINUS     [reduce using rule 30 (math)]
    MULT      [reduce using rule 30 (math)]
    DIV       [reduce using rule 30 (math)]
    $default  reduce using rule 30 (math)


State 79

   32 math: variable MULT statement .
   36     | statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 32 (math)]
    MINUS     [reduce using rule 32 (math)]
    MULT      [reduce using rule 32 (math)]
    DIV       [reduce using rule 32 (math)]
    $default  reduce using rule 32 (math)


State 80

   28 math: variable . MINUS variable
   29     | variable . PLUS variable
   30     | variable . MULT variable
   31     | variable . DIV variable
   31     | variable DIV variable .
   32     | variable . MULT statement
   33     | variable . PLUS statement
   34     | variable . MINUS statement
   35     | variable . DIV statement

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MULT   shift, and go to state 49
    DIV    shift, and go to state 50

    PLUS      [reduce using rule 31 (math)]
    MINUS     [reduce using rule 31 (math)]
    MULT      [reduce using rule 31 (math)]
    DIV       [reduce using rule 31 (math)]
    $default  reduce using rule 31 (math)


State 81

   35 math: variable DIV statement .
   36     | statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 35 (math)]
    MINUS     [reduce using rule 35 (math)]
    MULT      [reduce using rule 35 (math)]
    DIV       [reduce using rule 35 (math)]
    $default  reduce using rule 35 (math)


State 82

   36 math: statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   38     | statement PLUS statement .
   39     | statement . MINUS statement

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 38 (math)]
    MINUS     [reduce using rule 38 (math)]
    MULT      [reduce using rule 38 (math)]
    DIV       [reduce using rule 38 (math)]
    $default  reduce using rule 38 (math)


State 83

   36 math: statement . MULT statement
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement
   39     | statement MINUS statement .

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 39 (math)]
    MINUS     [reduce using rule 39 (math)]
    MULT      [reduce using rule 39 (math)]
    DIV       [reduce using rule 39 (math)]
    $default  reduce using rule 39 (math)


State 84

   36 math: statement . MULT statement
   36     | statement MULT statement .
   37     | statement . DIV statement
   38     | statement . PLUS statement
   39     | statement . MINUS statement

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 36 (math)]
    MINUS     [reduce using rule 36 (math)]
    MULT      [reduce using rule 36 (math)]
    DIV       [reduce using rule 36 (math)]
    $default  reduce using rule 36 (math)


State 85

   36 math: statement . MULT statement
   37     | statement . DIV statement
   37     | statement DIV statement .
   38     | statement . PLUS statement
   39     | statement . MINUS statement

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MULT   shift, and go to state 54
    DIV    shift, and go to state 55

    PLUS      [reduce using rule 37 (math)]
    MINUS     [reduce using rule 37 (math)]
    MULT      [reduce using rule 37 (math)]
    DIV       [reduce using rule 37 (math)]
    $default  reduce using rule 37 (math)


State 86

    6 function: VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statements    go to state 100
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 87

   52 condition: IDENT EQ . IDENT
   58          | IDENT EQ . NUMBER

    NUMBER  shift, and go to state 101
    IDENT   shift, and go to state 102


State 88

   53 condition: IDENT NEQ . IDENT
   59          | IDENT NEQ . NUMBER

    NUMBER  shift, and go to state 103
    IDENT   shift, and go to state 104


State 89

   54 condition: IDENT LT . IDENT
   60          | IDENT LT . NUMBER

    NUMBER  shift, and go to state 105
    IDENT   shift, and go to state 106


State 90

   55 condition: IDENT GT . IDENT
   61          | IDENT GT . NUMBER

    NUMBER  shift, and go to state 107
    IDENT   shift, and go to state 108


State 91

   56 condition: IDENT LTE . IDENT
   62          | IDENT LTE . NUMBER

    NUMBER  shift, and go to state 109
    IDENT   shift, and go to state 110


State 92

   57 condition: IDENT GTE . IDENT
   63          | IDENT GTE . NUMBER

    NUMBER  shift, and go to state 111
    IDENT   shift, and go to state 112


State 93

   46 ifElseState: IF L_PAREN condition R_PAREN . BEGIN_BODY statements END_BODY ifElseState

    BEGIN_BODY  shift, and go to state 113


State 94

   47 ifElseState: ELSE BEGIN_BODY statements END_BODY .

    $default  reduce using rule 47 (ifElseState)


State 95

   48 whileLoop: WHILE L_PAREN condition R_PAREN . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 114


State 96

   27 write: WRITE INPUT variable SEMICOLON .

    $default  reduce using rule 27 (write)


State 97

   40 functionCall: IDENT L_PAREN arguments R_PAREN .

    $default  reduce using rule 40 (functionCall)


State 98

   49 assignment: IDENT ASSIGN variable SEMICOLON .

    $default  reduce using rule 49 (assignment)


State 99

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 115


State 100

    6 function: VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 116


State 101

   58 condition: IDENT EQ NUMBER .

    $default  reduce using rule 58 (condition)


State 102

   52 condition: IDENT EQ IDENT .

    $default  reduce using rule 52 (condition)


State 103

   59 condition: IDENT NEQ NUMBER .

    $default  reduce using rule 59 (condition)


State 104

   53 condition: IDENT NEQ IDENT .

    $default  reduce using rule 53 (condition)


State 105

   60 condition: IDENT LT NUMBER .

    $default  reduce using rule 60 (condition)


State 106

   54 condition: IDENT LT IDENT .

    $default  reduce using rule 54 (condition)


State 107

   61 condition: IDENT GT NUMBER .

    $default  reduce using rule 61 (condition)


State 108

   55 condition: IDENT GT IDENT .

    $default  reduce using rule 55 (condition)


State 109

   62 condition: IDENT LTE NUMBER .

    $default  reduce using rule 62 (condition)


State 110

   56 condition: IDENT LTE IDENT .

    $default  reduce using rule 56 (condition)


State 111

   63 condition: IDENT GTE NUMBER .

    $default  reduce using rule 63 (condition)


State 112

   57 condition: IDENT GTE IDENT .

    $default  reduce using rule 57 (condition)


State 113

   46 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY . statements END_BODY ifElseState

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statements    go to state 117
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 114

   48 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 39
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    WRITE    shift, and go to state 16
    RETURN   shift, and go to state 17
    NUMBER   shift, and go to state 18
    IDENT    shift, and go to state 56

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 45 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 45 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 45 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 45 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 45 (ifElseState)]
    WRITE      [reduce using rule 18 (statement)]
    WRITE      [reduce using rule 45 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 45 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 45 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 45 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 45 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 45 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 45 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 45 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 45 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 22
    statements    go to state 118
    statement     go to state 24
    write         go to state 25
    math          go to state 26
    functionCall  go to state 27
    return        go to state 28
    definition    go to state 29
    ifElseState   go to state 30
    whileLoop     go to state 31
    assignment    go to state 32


State 115

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 116

    6 function: VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 117

   46 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY statements . END_BODY ifElseState

    END_BODY  shift, and go to state 119


State 118

   48 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 120


State 119

   46 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY . ifElseState

    IF    shift, and go to state 13
    ELSE  shift, and go to state 14

    IF        [reduce using rule 45 (ifElseState)]
    ELSE      [reduce using rule 45 (ifElseState)]
    $default  reduce using rule 45 (ifElseState)

    ifElseState  go to state 121


State 120

   48 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY .

    $default  reduce using rule 48 (whileLoop)


State 121

   46 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY ifElseState .

    $default  reduce using rule 46 (ifElseState)
