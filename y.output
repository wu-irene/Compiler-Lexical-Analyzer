Terminals unused in grammar

   FUNCTION
   ARRAY
   OF
   THEN
   ENDIF
   DO
   CONTINUE
   BREAK
   READ
   WRITE
   NOT
   TRUE
   FALSE
   MOD
   COLON
   L_SQUARE_BRACKET
   R_SQUARE_BRACKET
   EQUAL


Rules useless in parser due to conflicts

   41 return: RETURN


State 10 conflicts: 7 shift/reduce, 14 reduce/reduce
State 11 conflicts: 7 shift/reduce, 14 reduce/reduce
State 16 conflicts: 7 shift/reduce, 15 reduce/reduce
State 23 conflicts: 12 shift/reduce, 15 reduce/reduce
State 34 conflicts: 7 shift/reduce, 13 reduce/reduce
State 40 conflicts: 7 shift/reduce, 14 reduce/reduce
State 41 conflicts: 7 shift/reduce, 15 reduce/reduce
State 43 conflicts: 7 shift/reduce, 14 reduce/reduce
State 44 conflicts: 7 shift/reduce, 15 reduce/reduce
State 45 conflicts: 7 shift/reduce, 15 reduce/reduce
State 46 conflicts: 7 shift/reduce, 15 reduce/reduce
State 47 conflicts: 7 shift/reduce, 15 reduce/reduce
State 49 conflicts: 7 shift/reduce, 15 reduce/reduce
State 50 conflicts: 7 shift/reduce, 15 reduce/reduce
State 51 conflicts: 7 shift/reduce, 15 reduce/reduce
State 52 conflicts: 7 shift/reduce, 15 reduce/reduce
State 66 conflicts: 4 shift/reduce
State 67 conflicts: 7 shift/reduce, 13 reduce/reduce
State 69 conflicts: 4 shift/reduce
State 70 conflicts: 4 shift/reduce
State 71 conflicts: 4 shift/reduce
State 72 conflicts: 4 shift/reduce
State 73 conflicts: 4 shift/reduce
State 74 conflicts: 4 shift/reduce
State 75 conflicts: 4 shift/reduce
State 76 conflicts: 4 shift/reduce
State 77 conflicts: 4 shift/reduce
State 78 conflicts: 4 shift/reduce
State 79 conflicts: 4 shift/reduce
State 80 conflicts: 4 shift/reduce
State 81 conflicts: 7 shift/reduce, 13 reduce/reduce
State 107 conflicts: 7 shift/reduce, 13 reduce/reduce
State 108 conflicts: 7 shift/reduce, 13 reduce/reduce
State 113 conflicts: 2 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | functions

    3 functions: function
    4          | function functions

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY
    6         | VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    7 arguments: argument
    8          | argument COMMA arguments

    9 argument: %empty
   10         | INTEGER IDENT
   11         | IDENT
   12         | statements

   13 variable: IDENT
   14         | NUMBER

   15 statements: %empty
   16           | statement SEMICOLON
   17           | statement statements

   18 statement: %empty
   19          | ifElseState
   20          | whileLoop
   21          | assignment
   22          | definition
   23          | return
   24          | functionCall
   25          | math

   26 math: variable MINUS variable
   27     | variable PLUS variable
   28     | variable MULT variable
   29     | variable DIV variable
   30     | variable MULT statement
   31     | variable PLUS statement
   32     | variable MINUS statement
   33     | variable DIV statement
   34     | statement MULT statement
   35     | statement DIV statement
   36     | statement PLUS statement
   37     | statement MINUS statement

   38 functionCall: IDENT L_PAREN arguments R_PAREN

   39 return: RETURN NUMBER SEMICOLON
   40       | RETURN IDENT SEMICOLON
   41       | RETURN
   42       | RETURN statements

   43 definition: INTEGER IDENT SEMICOLON

   44 ifElseState: %empty
   45            | IF L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY ifElseState
   46            | ELSE BEGIN_BODY statements END_BODY

   47 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY

   48 assignment: IDENT ASSIGN NUMBER SEMICOLON
   49           | IDENT ASSIGN statement

   50 condition: %empty
   51          | IDENT EQ IDENT
   52          | IDENT NEQ IDENT
   53          | IDENT LT IDENT
   54          | IDENT GT IDENT
   55          | IDENT LTE IDENT
   56          | IDENT GTE IDENT
   57          | IDENT EQ NUMBER
   58          | IDENT NEQ NUMBER
   59          | IDENT LT NUMBER
   60          | IDENT GT NUMBER
   61          | IDENT LTE NUMBER
   62          | IDENT GTE NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 5 10 43
FUNCTION (259)
BEGIN_BODY (260) 5 6 45 46 47
END_BODY (261) 5 6 45 46 47
ARRAY (262)
OF (263)
IF (264) 45
THEN (265)
ENDIF (266)
ELSE (267) 46
WHILE (268) 47
DO (269)
CONTINUE (270)
BREAK (271)
READ (272)
WRITE (273)
NOT (274)
TRUE (275)
FALSE (276)
RETURN (277) 39 40 41 42
MOD (278)
EQ (279) 51 57
NEQ (280) 52 58
LT (281) 53 59
GT (282) 54 60
LTE (283) 55 61
GTE (284) 56 62
SEMICOLON (285) 16 39 40 43 48
COLON (286)
COMMA (287) 8
L_SQUARE_BRACKET (288)
R_SQUARE_BRACKET (289)
EQUAL (290)
NUMBER (291) 14 39 48 57 58 59 60 61 62
PLUS (292) 27 31 36
MINUS (293) 26 32 37
MULT (294) 28 30 34
DIV (295) 29 33 35
L_PAREN (296) 5 6 38 45 47
R_PAREN (297) 5 6 38 45 47
ASSIGN (298) 48 49
IDENT (299) 5 6 10 11 13 38 40 43 48 49 51 52 53 54 55 56 57 58 59
    60 61 62
VOID (300) 6


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
prog_start (47)
    on left: 1 2, on right: 0
functions (48)
    on left: 3 4, on right: 2 4
function (49)
    on left: 5 6, on right: 3 4
arguments (50)
    on left: 7 8, on right: 5 6 8 38
argument (51)
    on left: 9 10 11 12, on right: 7 8
variable (52)
    on left: 13 14, on right: 26 27 28 29 30 31 32 33
statements (53)
    on left: 15 16 17, on right: 5 6 12 17 42 45 46 47
statement (54)
    on left: 18 19 20 21 22 23 24 25, on right: 16 17 30 31 32 33 34
    35 36 37 49
math (55)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37, on right: 25
functionCall (56)
    on left: 38, on right: 24
return (57)
    on left: 39 40 41 42, on right: 23
definition (58)
    on left: 43, on right: 22
ifElseState (59)
    on left: 44 45 46, on right: 19 45
whileLoop (60)
    on left: 47, on right: 20
assignment (61)
    on left: 48 49, on right: 21
condition (62)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62, on right: 45 47


State 0

    0 $accept: . prog_start $end

    INTEGER  shift, and go to state 1
    VOID     shift, and go to state 2

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 3
    functions   go to state 4
    function    go to state 5


State 1

    5 function: INTEGER . IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    6 function: VOID . IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 7


State 3

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 4

    2 prog_start: functions .

    $default  reduce using rule 2 (prog_start)


State 5

    3 functions: function .
    4          | function . functions

    INTEGER  shift, and go to state 1
    VOID     shift, and go to state 2

    $default  reduce using rule 3 (functions)

    functions  go to state 9
    function   go to state 5


State 6

    5 function: INTEGER IDENT . L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    L_PAREN  shift, and go to state 10


State 7

    6 function: VOID IDENT . L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY

    L_PAREN  shift, and go to state 11


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 10

    5 function: INTEGER IDENT L_PAREN . arguments R_PAREN BEGIN_BODY statements END_BODY

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 18

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 19
    argument      go to state 20
    variable      go to state 21
    statements    go to state 22
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 11

    6 function: VOID IDENT L_PAREN . arguments R_PAREN BEGIN_BODY statements END_BODY

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 18

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 31
    argument      go to state 20
    variable      go to state 21
    statements    go to state 22
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 12

   10 argument: INTEGER . IDENT
   43 definition: INTEGER . IDENT SEMICOLON

    IDENT  shift, and go to state 32


State 13

   45 ifElseState: IF . L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY ifElseState

    L_PAREN  shift, and go to state 33


State 14

   46 ifElseState: ELSE . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 15

   47 whileLoop: WHILE . L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY

    L_PAREN  shift, and go to state 35


State 16

   39 return: RETURN . NUMBER SEMICOLON
   40       | RETURN . IDENT SEMICOLON
   41       | RETURN .
   42       | RETURN . statements

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    INTEGER    [reduce using rule 15 (statements)]
    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 41 (return)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 41 (return)]
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 15 (statements)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 41 (return)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 15 (statements)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 41 (return)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 15 (statements)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 41 (return)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 15 (statements)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 41 (return)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 15 (statements)
    SEMICOLON  [reduce using rule 18 (statement)]
    SEMICOLON  [reduce using rule 41 (return)]
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 15 (statements)
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 41 (return)]
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 15 (statements)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 41 (return)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 15 (statements)
    PLUS       [reduce using rule 18 (statement)]
    PLUS       [reduce using rule 41 (return)]
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 15 (statements)
    MINUS      [reduce using rule 18 (statement)]
    MINUS      [reduce using rule 41 (return)]
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 15 (statements)
    MULT       [reduce using rule 18 (statement)]
    MULT       [reduce using rule 41 (return)]
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 15 (statements)
    DIV        [reduce using rule 18 (statement)]
    DIV        [reduce using rule 41 (return)]
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 15 (statements)
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 41 (return)]
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 15 (statements)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 41 (return)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 15 (statements)

    variable      go to state 21
    statements    go to state 39
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 17

   14 variable: NUMBER .

    $default  reduce using rule 14 (variable)


State 18

   11 argument: IDENT .
   13 variable: IDENT .
   38 functionCall: IDENT . L_PAREN arguments R_PAREN
   48 assignment: IDENT . ASSIGN NUMBER SEMICOLON
   49           | IDENT . ASSIGN statement

    L_PAREN  shift, and go to state 40
    ASSIGN   shift, and go to state 41

    COMMA     reduce using rule 11 (argument)
    R_PAREN   reduce using rule 11 (argument)
    $default  reduce using rule 13 (variable)


State 19

    5 function: INTEGER IDENT L_PAREN arguments . R_PAREN BEGIN_BODY statements END_BODY

    R_PAREN  shift, and go to state 42


State 20

    7 arguments: argument .
    8          | argument . COMMA arguments

    COMMA  shift, and go to state 43

    $default  reduce using rule 7 (arguments)


State 21

   26 math: variable . MINUS variable
   27     | variable . PLUS variable
   28     | variable . MULT variable
   29     | variable . DIV variable
   30     | variable . MULT statement
   31     | variable . PLUS statement
   32     | variable . MINUS statement
   33     | variable . DIV statement

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45
    MULT   shift, and go to state 46
    DIV    shift, and go to state 47


State 22

   12 argument: statements .

    $default  reduce using rule 12 (argument)


State 23

   16 statements: statement . SEMICOLON
   17           | statement . statements
   34 math: statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement

    INTEGER    shift, and go to state 36
    IF         shift, and go to state 13
    ELSE       shift, and go to state 14
    WHILE      shift, and go to state 15
    RETURN     shift, and go to state 16
    SEMICOLON  shift, and go to state 48
    NUMBER     shift, and go to state 17
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    MULT       shift, and go to state 51
    DIV        shift, and go to state 52
    IDENT      shift, and go to state 53

    INTEGER    [reduce using rule 15 (statements)]
    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 15 (statements)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 15 (statements)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 15 (statements)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 15 (statements)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  [reduce using rule 15 (statements)]
    SEMICOLON  [reduce using rule 18 (statement)]
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 15 (statements)
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 15 (statements)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       [reduce using rule 15 (statements)]
    PLUS       [reduce using rule 18 (statement)]
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      [reduce using rule 15 (statements)]
    MINUS      [reduce using rule 18 (statement)]
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       [reduce using rule 15 (statements)]
    MULT       [reduce using rule 18 (statement)]
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        [reduce using rule 15 (statements)]
    DIV        [reduce using rule 18 (statement)]
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 15 (statements)
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 15 (statements)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 15 (statements)

    variable      go to state 21
    statements    go to state 54
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 24

   25 statement: math .

    $default  reduce using rule 25 (statement)


State 25

   24 statement: functionCall .

    $default  reduce using rule 24 (statement)


State 26

   23 statement: return .

    $default  reduce using rule 23 (statement)


State 27

   22 statement: definition .

    $default  reduce using rule 22 (statement)


State 28

   19 statement: ifElseState .

    $default  reduce using rule 19 (statement)


State 29

   20 statement: whileLoop .

    $default  reduce using rule 20 (statement)


State 30

   21 statement: assignment .

    $default  reduce using rule 21 (statement)


State 31

    6 function: VOID IDENT L_PAREN arguments . R_PAREN BEGIN_BODY statements END_BODY

    R_PAREN  shift, and go to state 55


State 32

   10 argument: INTEGER IDENT .
   43 definition: INTEGER IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 56

    $default  reduce using rule 10 (argument)


State 33

   45 ifElseState: IF L_PAREN . condition R_PAREN BEGIN_BODY statements END_BODY ifElseState

    IDENT  shift, and go to state 57

    $default  reduce using rule 50 (condition)

    condition  go to state 58


State 34

   46 ifElseState: ELSE BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statements    go to state 59
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 35

   47 whileLoop: WHILE L_PAREN . condition R_PAREN BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 57

    $default  reduce using rule 50 (condition)

    condition  go to state 60


State 36

   43 definition: INTEGER . IDENT SEMICOLON

    IDENT  shift, and go to state 61


State 37

   14 variable: NUMBER .
   39 return: RETURN NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 62

    $default  reduce using rule 14 (variable)


State 38

   13 variable: IDENT .
   38 functionCall: IDENT . L_PAREN arguments R_PAREN
   40 return: RETURN IDENT . SEMICOLON
   48 assignment: IDENT . ASSIGN NUMBER SEMICOLON
   49           | IDENT . ASSIGN statement

    SEMICOLON  shift, and go to state 63
    L_PAREN    shift, and go to state 40
    ASSIGN     shift, and go to state 41

    $default  reduce using rule 13 (variable)


State 39

   42 return: RETURN statements .

    $default  reduce using rule 42 (return)


State 40

   38 functionCall: IDENT L_PAREN . arguments R_PAREN

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 18

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 64
    argument      go to state 20
    variable      go to state 21
    statements    go to state 22
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 41

   48 assignment: IDENT ASSIGN . NUMBER SEMICOLON
   49           | IDENT ASSIGN . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 65
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statement     go to state 66
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 42

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 67


State 43

    8 arguments: argument COMMA . arguments

    INTEGER  shift, and go to state 12
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 18

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 9 (argument)
    COMMA      [reduce using rule 15 (statements)]
    COMMA      [reduce using rule 18 (statement)]
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 9 (argument)
    R_PAREN    [reduce using rule 15 (statements)]
    R_PAREN    [reduce using rule 18 (statement)]
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    arguments     go to state 68
    argument      go to state 20
    variable      go to state 21
    statements    go to state 22
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 44

   27 math: variable PLUS . variable
   31     | variable PLUS . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 69
    statement     go to state 70
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 45

   26 math: variable MINUS . variable
   32     | variable MINUS . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 71
    statement     go to state 72
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 46

   28 math: variable MULT . variable
   30     | variable MULT . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 73
    statement     go to state 74
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 47

   29 math: variable DIV . variable
   33     | variable DIV . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 75
    statement     go to state 76
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 48

   16 statements: statement SEMICOLON .

    $default  reduce using rule 16 (statements)


State 49

   36 math: statement PLUS . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statement     go to state 77
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 50

   37 math: statement MINUS . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statement     go to state 78
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 51

   34 math: statement MULT . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statement     go to state 79
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 52

   35 math: statement DIV . statement

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 18 (statement)
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    COMMA      reduce using rule 18 (statement)
    COMMA      [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    R_PAREN    reduce using rule 18 (statement)
    R_PAREN    [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statement     go to state 80
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 53

   13 variable: IDENT .
   38 functionCall: IDENT . L_PAREN arguments R_PAREN
   48 assignment: IDENT . ASSIGN NUMBER SEMICOLON
   49           | IDENT . ASSIGN statement

    L_PAREN  shift, and go to state 40
    ASSIGN   shift, and go to state 41

    $default  reduce using rule 13 (variable)


State 54

   17 statements: statement statements .

    $default  reduce using rule 17 (statements)


State 55

    6 function: VOID IDENT L_PAREN arguments R_PAREN . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 81


State 56

   43 definition: INTEGER IDENT SEMICOLON .

    $default  reduce using rule 43 (definition)


State 57

   51 condition: IDENT . EQ IDENT
   52          | IDENT . NEQ IDENT
   53          | IDENT . LT IDENT
   54          | IDENT . GT IDENT
   55          | IDENT . LTE IDENT
   56          | IDENT . GTE IDENT
   57          | IDENT . EQ NUMBER
   58          | IDENT . NEQ NUMBER
   59          | IDENT . LT NUMBER
   60          | IDENT . GT NUMBER
   61          | IDENT . LTE NUMBER
   62          | IDENT . GTE NUMBER

    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87


State 58

   45 ifElseState: IF L_PAREN condition . R_PAREN BEGIN_BODY statements END_BODY ifElseState

    R_PAREN  shift, and go to state 88


State 59

   46 ifElseState: ELSE BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 89


State 60

   47 whileLoop: WHILE L_PAREN condition . R_PAREN BEGIN_BODY statements END_BODY

    R_PAREN  shift, and go to state 90


State 61

   43 definition: INTEGER IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 62

   39 return: RETURN NUMBER SEMICOLON .

    $default  reduce using rule 39 (return)


State 63

   40 return: RETURN IDENT SEMICOLON .

    $default  reduce using rule 40 (return)


State 64

   38 functionCall: IDENT L_PAREN arguments . R_PAREN

    R_PAREN  shift, and go to state 91


State 65

   14 variable: NUMBER .
   48 assignment: IDENT ASSIGN NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 92

    $default  reduce using rule 14 (variable)


State 66

   34 math: statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement
   49 assignment: IDENT ASSIGN statement .

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 49 (assignment)]
    MINUS     [reduce using rule 49 (assignment)]
    MULT      [reduce using rule 49 (assignment)]
    DIV       [reduce using rule 49 (assignment)]
    $default  reduce using rule 49 (assignment)


State 67

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statements    go to state 93
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 68

    8 arguments: argument COMMA arguments .

    $default  reduce using rule 8 (arguments)


State 69

   26 math: variable . MINUS variable
   27     | variable . PLUS variable
   27     | variable PLUS variable .
   28     | variable . MULT variable
   29     | variable . DIV variable
   30     | variable . MULT statement
   31     | variable . PLUS statement
   32     | variable . MINUS statement
   33     | variable . DIV statement

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45
    MULT   shift, and go to state 46
    DIV    shift, and go to state 47

    PLUS      [reduce using rule 27 (math)]
    MINUS     [reduce using rule 27 (math)]
    MULT      [reduce using rule 27 (math)]
    DIV       [reduce using rule 27 (math)]
    $default  reduce using rule 27 (math)


State 70

   31 math: variable PLUS statement .
   34     | statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 31 (math)]
    MINUS     [reduce using rule 31 (math)]
    MULT      [reduce using rule 31 (math)]
    DIV       [reduce using rule 31 (math)]
    $default  reduce using rule 31 (math)


State 71

   26 math: variable . MINUS variable
   26     | variable MINUS variable .
   27     | variable . PLUS variable
   28     | variable . MULT variable
   29     | variable . DIV variable
   30     | variable . MULT statement
   31     | variable . PLUS statement
   32     | variable . MINUS statement
   33     | variable . DIV statement

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45
    MULT   shift, and go to state 46
    DIV    shift, and go to state 47

    PLUS      [reduce using rule 26 (math)]
    MINUS     [reduce using rule 26 (math)]
    MULT      [reduce using rule 26 (math)]
    DIV       [reduce using rule 26 (math)]
    $default  reduce using rule 26 (math)


State 72

   32 math: variable MINUS statement .
   34     | statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 32 (math)]
    MINUS     [reduce using rule 32 (math)]
    MULT      [reduce using rule 32 (math)]
    DIV       [reduce using rule 32 (math)]
    $default  reduce using rule 32 (math)


State 73

   26 math: variable . MINUS variable
   27     | variable . PLUS variable
   28     | variable . MULT variable
   28     | variable MULT variable .
   29     | variable . DIV variable
   30     | variable . MULT statement
   31     | variable . PLUS statement
   32     | variable . MINUS statement
   33     | variable . DIV statement

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45
    MULT   shift, and go to state 46
    DIV    shift, and go to state 47

    PLUS      [reduce using rule 28 (math)]
    MINUS     [reduce using rule 28 (math)]
    MULT      [reduce using rule 28 (math)]
    DIV       [reduce using rule 28 (math)]
    $default  reduce using rule 28 (math)


State 74

   30 math: variable MULT statement .
   34     | statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 30 (math)]
    MINUS     [reduce using rule 30 (math)]
    MULT      [reduce using rule 30 (math)]
    DIV       [reduce using rule 30 (math)]
    $default  reduce using rule 30 (math)


State 75

   26 math: variable . MINUS variable
   27     | variable . PLUS variable
   28     | variable . MULT variable
   29     | variable . DIV variable
   29     | variable DIV variable .
   30     | variable . MULT statement
   31     | variable . PLUS statement
   32     | variable . MINUS statement
   33     | variable . DIV statement

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45
    MULT   shift, and go to state 46
    DIV    shift, and go to state 47

    PLUS      [reduce using rule 29 (math)]
    MINUS     [reduce using rule 29 (math)]
    MULT      [reduce using rule 29 (math)]
    DIV       [reduce using rule 29 (math)]
    $default  reduce using rule 29 (math)


State 76

   33 math: variable DIV statement .
   34     | statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 33 (math)]
    MINUS     [reduce using rule 33 (math)]
    MULT      [reduce using rule 33 (math)]
    DIV       [reduce using rule 33 (math)]
    $default  reduce using rule 33 (math)


State 77

   34 math: statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   36     | statement PLUS statement .
   37     | statement . MINUS statement

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 36 (math)]
    MINUS     [reduce using rule 36 (math)]
    MULT      [reduce using rule 36 (math)]
    DIV       [reduce using rule 36 (math)]
    $default  reduce using rule 36 (math)


State 78

   34 math: statement . MULT statement
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement
   37     | statement MINUS statement .

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 37 (math)]
    MINUS     [reduce using rule 37 (math)]
    MULT      [reduce using rule 37 (math)]
    DIV       [reduce using rule 37 (math)]
    $default  reduce using rule 37 (math)


State 79

   34 math: statement . MULT statement
   34     | statement MULT statement .
   35     | statement . DIV statement
   36     | statement . PLUS statement
   37     | statement . MINUS statement

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 34 (math)]
    MINUS     [reduce using rule 34 (math)]
    MULT      [reduce using rule 34 (math)]
    DIV       [reduce using rule 34 (math)]
    $default  reduce using rule 34 (math)


State 80

   34 math: statement . MULT statement
   35     | statement . DIV statement
   35     | statement DIV statement .
   36     | statement . PLUS statement
   37     | statement . MINUS statement

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    MULT   shift, and go to state 51
    DIV    shift, and go to state 52

    PLUS      [reduce using rule 35 (math)]
    MINUS     [reduce using rule 35 (math)]
    MULT      [reduce using rule 35 (math)]
    DIV       [reduce using rule 35 (math)]
    $default  reduce using rule 35 (math)


State 81

    6 function: VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statements    go to state 94
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 82

   51 condition: IDENT EQ . IDENT
   57          | IDENT EQ . NUMBER

    NUMBER  shift, and go to state 95
    IDENT   shift, and go to state 96


State 83

   52 condition: IDENT NEQ . IDENT
   58          | IDENT NEQ . NUMBER

    NUMBER  shift, and go to state 97
    IDENT   shift, and go to state 98


State 84

   53 condition: IDENT LT . IDENT
   59          | IDENT LT . NUMBER

    NUMBER  shift, and go to state 99
    IDENT   shift, and go to state 100


State 85

   54 condition: IDENT GT . IDENT
   60          | IDENT GT . NUMBER

    NUMBER  shift, and go to state 101
    IDENT   shift, and go to state 102


State 86

   55 condition: IDENT LTE . IDENT
   61          | IDENT LTE . NUMBER

    NUMBER  shift, and go to state 103
    IDENT   shift, and go to state 104


State 87

   56 condition: IDENT GTE . IDENT
   62          | IDENT GTE . NUMBER

    NUMBER  shift, and go to state 105
    IDENT   shift, and go to state 106


State 88

   45 ifElseState: IF L_PAREN condition R_PAREN . BEGIN_BODY statements END_BODY ifElseState

    BEGIN_BODY  shift, and go to state 107


State 89

   46 ifElseState: ELSE BEGIN_BODY statements END_BODY .

    $default  reduce using rule 46 (ifElseState)


State 90

   47 whileLoop: WHILE L_PAREN condition R_PAREN . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 108


State 91

   38 functionCall: IDENT L_PAREN arguments R_PAREN .

    $default  reduce using rule 38 (functionCall)


State 92

   48 assignment: IDENT ASSIGN NUMBER SEMICOLON .

    $default  reduce using rule 48 (assignment)


State 93

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 109


State 94

    6 function: VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 110


State 95

   57 condition: IDENT EQ NUMBER .

    $default  reduce using rule 57 (condition)


State 96

   51 condition: IDENT EQ IDENT .

    $default  reduce using rule 51 (condition)


State 97

   58 condition: IDENT NEQ NUMBER .

    $default  reduce using rule 58 (condition)


State 98

   52 condition: IDENT NEQ IDENT .

    $default  reduce using rule 52 (condition)


State 99

   59 condition: IDENT LT NUMBER .

    $default  reduce using rule 59 (condition)


State 100

   53 condition: IDENT LT IDENT .

    $default  reduce using rule 53 (condition)


State 101

   60 condition: IDENT GT NUMBER .

    $default  reduce using rule 60 (condition)


State 102

   54 condition: IDENT GT IDENT .

    $default  reduce using rule 54 (condition)


State 103

   61 condition: IDENT LTE NUMBER .

    $default  reduce using rule 61 (condition)


State 104

   55 condition: IDENT LTE IDENT .

    $default  reduce using rule 55 (condition)


State 105

   62 condition: IDENT GTE NUMBER .

    $default  reduce using rule 62 (condition)


State 106

   56 condition: IDENT GTE IDENT .

    $default  reduce using rule 56 (condition)


State 107

   45 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY . statements END_BODY ifElseState

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statements    go to state 111
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 108

   47 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY . statements END_BODY

    INTEGER  shift, and go to state 36
    IF       shift, and go to state 13
    ELSE     shift, and go to state 14
    WHILE    shift, and go to state 15
    RETURN   shift, and go to state 16
    NUMBER   shift, and go to state 17
    IDENT    shift, and go to state 53

    INTEGER    [reduce using rule 18 (statement)]
    INTEGER    [reduce using rule 44 (ifElseState)]
    END_BODY   reduce using rule 15 (statements)
    END_BODY   [reduce using rule 18 (statement)]
    END_BODY   [reduce using rule 44 (ifElseState)]
    IF         [reduce using rule 18 (statement)]
    IF         [reduce using rule 44 (ifElseState)]
    ELSE       [reduce using rule 18 (statement)]
    ELSE       [reduce using rule 44 (ifElseState)]
    WHILE      [reduce using rule 18 (statement)]
    WHILE      [reduce using rule 44 (ifElseState)]
    RETURN     [reduce using rule 18 (statement)]
    RETURN     [reduce using rule 44 (ifElseState)]
    SEMICOLON  reduce using rule 18 (statement)
    SEMICOLON  [reduce using rule 44 (ifElseState)]
    NUMBER     [reduce using rule 18 (statement)]
    NUMBER     [reduce using rule 44 (ifElseState)]
    PLUS       reduce using rule 18 (statement)
    PLUS       [reduce using rule 44 (ifElseState)]
    MINUS      reduce using rule 18 (statement)
    MINUS      [reduce using rule 44 (ifElseState)]
    MULT       reduce using rule 18 (statement)
    MULT       [reduce using rule 44 (ifElseState)]
    DIV        reduce using rule 18 (statement)
    DIV        [reduce using rule 44 (ifElseState)]
    IDENT      [reduce using rule 18 (statement)]
    IDENT      [reduce using rule 44 (ifElseState)]
    $default   reduce using rule 18 (statement)

    variable      go to state 21
    statements    go to state 112
    statement     go to state 23
    math          go to state 24
    functionCall  go to state 25
    return        go to state 26
    definition    go to state 27
    ifElseState   go to state 28
    whileLoop     go to state 29
    assignment    go to state 30


State 109

    5 function: INTEGER IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 110

    6 function: VOID IDENT L_PAREN arguments R_PAREN BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 111

   45 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY statements . END_BODY ifElseState

    END_BODY  shift, and go to state 113


State 112

   47 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 114


State 113

   45 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY . ifElseState

    IF    shift, and go to state 13
    ELSE  shift, and go to state 14

    IF        [reduce using rule 44 (ifElseState)]
    ELSE      [reduce using rule 44 (ifElseState)]
    $default  reduce using rule 44 (ifElseState)

    ifElseState  go to state 115


State 114

   47 whileLoop: WHILE L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY .

    $default  reduce using rule 47 (whileLoop)


State 115

   45 ifElseState: IF L_PAREN condition R_PAREN BEGIN_BODY statements END_BODY ifElseState .

    $default  reduce using rule 45 (ifElseState)
